// Place your key bindings in this file to override the defaultsauto[]
[
  // Editor Views Linux
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+k ctrl+e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+k ctrl+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+k ctrl+d",
    "command": "workbench.view.debug"
  },
  {
    "key": "ctrl+k ctrl+x",
    "command": "workbench.view.extensions"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+a c",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+a n",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+k ctrl+t",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  // VIM Binds for suggest and quickOpen
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  },
  // VIM Keybinds to focus windows
  {
    "key": "ctrl+shift+h",
    "when": "!suggestWidgetVisible && !inQuickOpen",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+shift+j",
    "when": "!suggestWidgetVisible && !inQuickOpen",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl+shift+k",
    "when": "!suggestWidgetVisible && !inQuickOpen",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl+shift+l",
    "when": "!suggestWidgetVisible && !inQuickOpen",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl+h",
    "command": "C_Cpp.SwitchHeaderSource",
    "when": "editorLangId == 'cpp'"
  },
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference",
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "workbench.action.debug.start",
    "when": "!suggestWidgetVisible && !inQuickOpen"
  },
  {
    "key": "ctrl+[",
    "command": "workbench.action.previousEditor",
  },
  {
    "key": "ctrl+]",
    "command": "workbench.action.nextEditor",
  },
  {
    "key": "ctrl+k",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.k && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+k",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.k && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
]